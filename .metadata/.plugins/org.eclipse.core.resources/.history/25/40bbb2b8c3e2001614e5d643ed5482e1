package week01

object session {
  1 + 3                                           //> res0: Int(4) = 4
  def abs(x: Double) = if (x > 0) x else -x       //> abs: (x: Double)Double

  def sqrt(x: Double) = {

    def sqrtIter(guess: Double): Double =
      if (isGoodEnough(guess)) guess
      else sqrtIter(improve(guess))

    def isGoodEnough(guess: Double) =
      abs(guess * guess - x) / x < 0.000001

    def improve(guess: Double) =
      (guess + x / guess) / 2

    sqrtIter(1.0)
  }                                               //> sqrt: (x: Double)Double

// Tests for sqrt function
  sqrt(2)                                         //> res1: Double = 1.4142135623746899
  sqrt(4)                                         //> res2: Double = 2.0000000929222947
  sqrt(9)                                         //> res3: Double = 3.000000001396984
  sqrt(15)                                        //> res4: Double = 3.872983698008724
  sqrt(1e-6)                                      //> res5: Double = 0.0010000001533016628
  sqrt(1e60)                                      //> res6: Double = 1.0000000031080746E30
  
  
  def countChange(money: Int, coins: List[Int]): Int = {
  	if(coins.isEmpty) 0
  	else if(money - coins.head == 0) 1
  	else if(money - coins.head < 0) 0
  	else countChange(money - coins.head, coins) + countChange(money, coins.tail)
  }                                               //> countChange: (money: Int, coins: List[Int])Int
  
  countChange(4, List(1,2))                       //> res7: Int = 3
  countChange(300,List(500,5,50,100,20,200,10))   //> res8: Int = 0
}