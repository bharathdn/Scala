package week01

object session {
  1 + 3
  def abs(x: Double) = if (x > 0) x else -x

  def sqrt(x: Double) = {

    def sqrtIter(guess: Double): Double =
      if (isGoodEnough(guess)) guess
      else sqrtIter(improve(guess))

    def isGoodEnough(guess: Double) =
      abs(guess * guess - x) / x < 0.000001

    def improve(guess: Double) =
      (guess + x / guess) / 2

    sqrtIter(1.0)
  }

// Tests for sqrt function
  sqrt(2)
  sqrt(4)
  sqrt(9)
  sqrt(15)
  sqrt(1e-6)
  sqrt(1e60)
  
  
  def countChange(money: Int, coins: List[Int]): Int = {
  def countChangeHelper(money: Int, coins: List[Int]): Int = {
  	if(coins.isEmpty) 0
  	else if(money - coins.head == 0) 1
  	else if(money - coins.head < 0) 0
  	else countChange(money - coins.head, coins) + countChange(money, coins.tail)
  	}
  }
  
  
   def countChange2(money: Int, coins: List[Int]): Int = {
    if ((money < 0) || coins.isEmpty) 0
    else {
      if (money == 0) 1
      else {
        countChange2(money - coins.head, coins) + countChange(money, coins.tail)
      }
    }
  }
  
  countChange(4, List(1,2))
  countChange(300,List(500,5,50,100,20,200,10))
  
  countChange2(4, List(1,2))
  countChange2(300,List(500,5,50,100,20,200,10))
}